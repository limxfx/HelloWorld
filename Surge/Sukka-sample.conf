# updated at: 2024-12-1
# 参考配置 - https://blog.skk.moe/post/i-have-my-unique-surge-setup/
# 官方手册 - https://manual.nssurge.com/
# 理解原理 - https://manual.nssurge.com/book/understanding-surge/cn/
# 帮助中心 - https://nssurge.zendesk.com/
# 技术社区 - https://community.nssurge.com

[General]
# 在 Surge iOS 中，包含在 skip-proxy 的 IP 段和域名会绕过 Surge Proxy、直接通过 Surge VIF 虚拟网卡处理；而在 Surge Mac 中，skip-proxy 会被写入系统偏好设置中的 Skip Proxy。这个设置主要是为了避免某些 iOS 应用检测到系统代理，以及一些会读环境变量的软件（例如 curl、Node.js 和 Bun 的 HttpAgent）能够正确处理内网流量。
skip-proxy = 127.0.0.0/8, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, 162.14.0.0/16, 211.99.96.0/19, 162.159.192.0/24, 162.159.193.0/24, 162.159.195.0/24, fc00::/7, fe80::/10, localhost, *.local, captive.apple.com, passenger.t3go.cn, *.ccb.com, wxh.wo.cn, *.abcchina.com, *.abcchina.com.cn

# 在 always-real-ip 内置的域名，Surge 的 DNS 在解析时不会返回 Fake IP、主要改善部分 UDP 流量和部分软件的兼容性。我使用脚本自动化生成的 Surge Module 去设置这个值。
# 建议使用 skk 的 sgmodel 来实现。https://ruleset.skk.moe/Modules/sukka_common_always_realip.sgmodule
#always-real-ip = <simple-hostname>, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.logon.battlenet.com.cn, *.logon.battle.net, stun.l.google.com, easy-login.10099.com.cn,*-update.xoyocdn.com, *.prod.cloud.netflix.com, appboot.netflix.com, *-appboot.netflix.com

# 控制不带点的域名（如 localhost、DEVICE-A114514 这类 mDNS 名）是否绕过 Surge Proxy、直接使用 Surge VIF 虚拟网卡处理。
exclude-simple-hostnames = true

# 让 Surge 劫持目标为 8.8.8.8 和 8.8.4.4 的 53 端口，解决 Google 系家用产品（如 Chromecast）强制使用 8.8.8.8 和 8.8.4.4、不使用 Surge DNS 的问题。
hijack-dns = 8.8.8.8:53, 8.8.4.4:53

# ipv6 选项主要控制 Surge 的 DNS，true 时 Surge 的 DNS 会同时请求 AAAA 和 A 记录、false 时 Surge 只会请求 A 记录。
ipv6 = false
# 一般的，建议将两个 IPv6 都禁用，因为在国内使用 IPv6 可能导致网络体验劣化，而且即使在 Surge 中禁用了 IPv6、也不影响海外网站和流媒体的 IPv6。
# ipv6-vif 选项主要控制 Surge Helper 修改路由表的行为、是否将 IPv6 的网段也添加到本机路由表通过 Surge 虚拟网卡。
ipv6-vif = off

# 当一个请求被 Surge 的 REJCT-* 策略拦截时，返回一个 HTML 拦截页。
show-error-page-for-reject = true

# 控制是否让 Surge for Mac 读取 /etc/hosts 文件并在 Surge DNS 中模拟该行为。
read-etc-hosts = true

# Surge 会使用 HEAD 方式请求 internet-test-url 和 proxy-test-url 的地址，并且无视响应的状态码、只要有响应就视为网络可达。Surge 会通过远端策略、对 proxy-test-url 中指定的 DNS 服务器和域名进行一次 DNS 解析请求，如果远端 DNS 解析成功则视为远端策略 UDP 可达。
internet-test-url = http://www.apple.com/library/test/success.html
proxy-test-url = http://latency-test.skk.moe/endpoint
# 这三个选项控制 Surge 如何测试本地和远端策略的可用性、以及远端策略的 UDP 可达性。
# proxy-test-udp 建议使用非常见的海外公共 DNS（如 Vercara、原 UltraDNS / NeuStar 的公共 DNS）解析常见域名（如 www.apple.com）。
proxy-test-udp = www.apple.com@64.6.64.6

# 控制 Surge for Mac 的 VIF 虚拟网卡使用的底层机制。详情可以查看 https://manual.nssurge.com/others/misc-options.html#vif-mode 和 https://community.nssurge.com/d/1915-surge-mac-5-vif-m3
vif-mode = v3

# 当前流量选用的策略不支持 UDP 转发时、如何处理这部分流量，可以设置 DIRECT 和 REJECT。推荐用 REJECT，防止 UDP 流量被直连漏出去。
udp-policy-not-supported-behaviour = REJECT

#> DNS 服务器
dns-server = 223.5.5.5, 119.29.29.29
#> 除非当地 ISP 有严重的 DNS 污染问题，否则没必要开启 DoH，传统 DNS 的性能最优，网络异常后恢复速度最快。如果网络环境并不是很文明、则使用国内公共 DNS 提供的加密 DNS 服务、牺牲国内 CDN 体验换取整体的网络体验。
#encrypted-dns-server = quic://223.5.5.5, quic://223.6.6.6, https://1.12.12.12/dns-query, https://120.53.53.53/dns-query
#> 日志级别
loglevel = notify
#> 测试超时（秒）
test-timeout = 2
#> 启用 Wi-Fi 助手 (在 Wi-Fi 网络不佳时尝试使用数据网络建立连接，请仅当使用不限量的数据流量时开启)
wifi-assist = true
#> GeoIP数据库
geoip-maxmind-url = https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb

[Proxy Group]
#> 策略组（下面的节点信息需与外部节点对应，若删除了外部节点里的节点，那么在策略组里也要删除。）
Proxy = select, DIRECT, 🇭🇰 HK, 🇺🇸 US, 🇯🇵 JP, 🇨🇳 TW, 🇰🇷 KR, 🇸🇬 SG, 🌍 Other, ✈️ 我的节点, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png

CDN = select, DIRECT, 🇭🇰 HK, 🇺🇸 US, 🇯🇵 JP, 🇨🇳 TW, 🇰🇷 KR, 🇸🇬 SG, 🎞️ Streaming, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png
Streaming!CN = select, DIRECT, 🇭🇰 HK, 🇺🇸 US, 🇯🇵 JP, 🇨🇳 TW, 🇰🇷 KR, 🇸🇬 SG, 🎞️ Streaming, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming!CN.png
#StreamingCN=select, DIRECT, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/StreamingCN.png
AI = select, 🇺🇸 US, 🏠 HomeNetwork, icon-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/OpenAI.png
Google  = select, 🇭🇰 HK, 🇺🇸 US, 🏠 HomeNetwork, icon-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Google.png
Telegram = select, 🇭🇰 HK, 🇺🇸 US, 🇯🇵 JP, 🇨🇳 TW, 🇰🇷 KR, 🇸🇬 SG, 🏠 HomeNetwork, icon-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/lige47/telegram(1).png
Apple = select, DIRECT, 🇭🇰 HK, 🇺🇸 US, icon-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Apple.png
Microsoft = select, DIRECT, 🇭🇰 HK, 🇺🇸 US, icon-url=https://raw.githubusercontent.com/fmz200/wool_scripts/main/icons/apps/Microsoft.png

#> 国家节点
🇭🇰 HK = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇭🇰)|(香港)|(Hong)|(HK), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
🇺🇸 US = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇺🇸)|(美国)|(States)|(US), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
🇯🇵 JP = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇯🇵)|(日本)|(Japan)|(JP), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
🇨🇳 TW = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇨🇳)|(台湾)|(Tai)|(TW), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
🇰🇷 KR = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇰🇷)|(韩国)|(Korea)|(KR), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
🇸🇬 SG = smart, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=1, include-all-proxies=0, policy-regex-filter=(🇸🇬)|(新加坡)|(Singapore)|(SG), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
🌍 Other = select, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0, policy-regex-filter=^(?!.*((Traffic)|(Expire)|🇭🇰|🇨🇳|🇺🇸|🇯🇵|🇸🇬)).*$,icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png

#> 特殊节点
🎞️ Streaming = select, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=0,include-all-proxies=0, policy-regex-filter=(0\.[1-9])|(日用)|(低倍)|(实验), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png
🏠 HomeNetwork = select, include-other-group=✈️ 我的节点, update-interval=0, no-alert=0, hidden=0,include-all-proxies=0, policy-regex-filter=(家用)|(家庭)|(家宽), icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TAG.png

#> 外部节点
✈️ 我的节点 = select, policy-path=机场订阅链接, update-interval=0, no-alert=0, hidden=0, include-all-proxies=0, persistent=1, icon-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Airport.png

[Rule]
# 避免 DNS 污染和 DNS 泄漏最有效的办法就是永远不在本地进行 DNS 解析，而 Surge 和 Clash 能且只能通过 Fake IP 和域名规则匹配的方式 可以实现非直连域名 一定不在本地本机进行任何 DNS 解析。
# 在 Surge 和 Clash 中，规则自上而下匹配，只有当遇到 IP 类规则（如 IP-CIDR、IP-CIDR6、GEOIP 和 IP-ASN）时才会发起 DNS 解析。因此，在 Surge 中，将会触发 DNS 解析的规则放在域名和 URL 匹配规则后面非常重要。
# 在 Surge Profile 中先引用所有的非 IP 类规则再引用 IP 类规则，可以避免 DNS 泄漏和 DNS 污染。

### no-ip ###
#> 广告拦截 / 隐私保护 / 病毒拦截 / 钓鱼和诈骗域名拦截
# 应该是目前市面上拦截最全面、几乎零误杀的 Surge / Clash 域名集，域名数据来源为 uBlock Origin、AdGuard、EasyList 等共 38 个来源，截至本文写就，条目数量已经达到 30 万级别。
# 需要注意的是，Surge / Clash 完全无法替代浏览器内的去广告插件（如 AdBlock Plus）和运行在操作系统上的去广告软件（如 AdGuard）。
DOMAIN-SET,https://ruleset.skk.moe/List/domainset/reject.conf,REJECT-TINYGIF,pre-matching,extended-matching
#DOMAIN-SET,https://ruleset.skk.moe/List/domainset/reject_extra.conf,REJECT-TINYGIF,pre-matching,extended-matching
RULE-SET,https://ruleset.skk.moe/List/non_ip/reject.conf,REJECT,pre-matching,extended-matching
#> 其它域名拦截
# 其它拦截规则不涉及广告、病毒、钓鱼等的拦截，主要是通过屏蔽特定类型的网络连接改善日常上网体验。
# 第一个规则组会阻止 YouTube、Bilibili 和斗鱼的视频 CDN 的 QUIC，以及阻止斗鱼将用户的手机电脑变成 PCDN。
RULE-SET,https://ruleset.skk.moe/List/non_ip/reject-no-drop.conf,REJECT-NO-DROP,pre-matching,extended-matching
# 第二个规则组是直接丢弃发往 Adobe 系列软件内部的跟踪打点域名的数据包 —— Adobe 软件的打点 SDK 所使用的 HTTP 请求库实现不当、会无限重试请求，导致 Surge / Clash 内存泄漏。
#RULE-SET,https://ruleset.skk.moe/List/non_ip/reject-drop.conf,REJECT-DROP,pre-matching,extended-matching
#> URL-REGEX
# 需搭配 Surge 模块 https://ruleset.skk.moe/Modules/sukka_mitm_hostnames.sgmodule 使用
# MITM 和 URL-REGEX 性能开销极大，不推荐使用
#RULE-SET,https://ruleset.skk.moe/List/non_ip/reject-url-regex.conf,REJECT,pre-matching,extended-matching

#> 测速网站及其测速点域名
#DOMAIN-SET,https://ruleset.skk.moe/List/domainset/speedtest.conf,Proxy,extended-matching

#> 静态 CDN 域名
DOMAIN-SET,https://ruleset.skk.moe/List/domainset/cdn.conf,CDN,extended-matching
RULE-SET,https://ruleset.skk.moe/List/non_ip/cdn.conf,CDN,extended-matching

#> 流媒体域名
# 其中，stream_[xx].conf 包含 限定地区访问的流媒体（例如 BBC 直播只允许在英国访问）的规则，而 stream.conf 则包含所有流媒体的全部规则。你可以根据自己的需求选择性引用 stream_[xx].conf 规则划分独立策略、并使用 stream.conf 为剩下所有的常用流媒体做兜底。
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_hk.conf,[替换你的策略名],extended-matching
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_jp.conf,[替换你的策略名],extended-matching
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_us.conf,[替换你的策略名],extended-matching
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_tw.conf,[替换你的策略名],extended-matching
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_kr.conf,[替换你的策略名],extended-matching
#RULE-SET,https://ruleset.skk.moe/List/non_ip/stream_eu.conf,[替换你的策略名],extended-matching
RULE-SET,https://ruleset.skk.moe/List/non_ip/stream.conf,Streaming!CN,extended-matching

#> AIGC 类服务域名
# 大部分内容生成式 AI 服务（如 OpenAI 及 ChatGPT、Google Gemini 等）都会限制特定国家和地区的访问。由于这部分服务的公司一般位于美国、美国对于 AI 的立法也较为宽松，我建议这个规则组在分配策略时、优先选用位于美国的策略组访问。
RULE-SET,https://ruleset.skk.moe/List/non_ip/ai.conf,AI,extended-matching

#> Telegram 域名
# 包含 Telegram 及其旗下其他服务（Telegraph）的域名。
RULE-SET,https://ruleset.skk.moe/List/non_ip/telegram.conf,Telegram,extended-matching

#> 苹果和微软服务域名
# Apple & Microsoft 国内 CDN 域名
#RULE-SET,https://ruleset.skk.moe/List/non_ip/apple_cdn.conf,DIRECT
#RULE-SET,https://ruleset.skk.moe/List/non_ip/microsoft_cdn.conf,DIRECT
#> Apple CN 域名，云上贵州（icloud.com.cn）和苹果地图国内版等服务的域名，这部分域名需要国内直连访问。
RULE-SET,https://ruleset.skk.moe/List/non_ip/apple_cn.conf,DIRECT
#> 排除了有国内 CDN 节点的域名和国区专用域名以后，苹果和微软其余的域名。
RULE-SET,https://ruleset.skk.moe/List/non_ip/apple_services.conf,Apple,extended-matching
RULE-SET,https://ruleset.skk.moe/List/non_ip/microsoft.conf,Microsoft,extended-matching
#>> iCloud Private Relay 域名列表
# 本条配置请阅读内容后自行判断是否启用
#DOMAIN-SET,https://ruleset.skk.moe/List/domainset/icloud_private_relay.conf,Apple,extended-matching

#>> 自定义 non-ip 规则
# Google
RULE-SET,https://raw.githubusercontent.com/limxfx/HelloWorld/refs/heads/main/Surge/Ruleset/non_ip/google.list,Google,extended-matching

#> 网易云音乐的域名
# 网易云音乐的 API 域名和网易云音乐客户端的进程名。这个规则主要用于不侵入式修改网易云音乐客户端、将某些网易云音乐使用特殊策略以实现某些特殊需求。
#RULE-SET,https://ruleset.skk.moe/List/non_ip/neteasemusic.conf,[替换你的策略名],extended-matching

#> 软件、游戏和驱动的下载和更新域名
# 收集了操作系统、软件、驱动、游戏（例如 Steam 和 Epic）的下载和更新域名，但不包含国内有 CDN 节点的域名（那部分域名已经包括在前文 apple_cdn.conf 和 microsoft_cdn.conf），作用和静态 CDN 规则集类似。
# 考虑到大部分操作系统、软件、驱动、游戏的下载域名在国内可达，大家可以根据自身需要、酌情设置 download.conf 走直连，或者在下载开始前手动调整策略。
DOMAIN-SET,https://ruleset.skk.moe/List/domainset/download.conf,DIRECT,extended-matching
RULE-SET,https://ruleset.skk.moe/List/non_ip/download.conf,DIRECT,extended-matching

#> 常见海外域名
# 常见海外服务和互联网公司的域名。其中部分域名被 DNS 污染，将其收录在域名类规则中、配合远端策略可以避免 Surge 在本机解析这些域名、有效避免 DNS 污染和 DNS 泄漏。
RULE-SET,https://ruleset.skk.moe/List/non_ip/global.conf,Proxy,extended-matching

#> 国内常见域名
# 人工维护的国内常见互联网公司和服务的域名。这部分域名一般需要通过国内直连访问。
RULE-SET,https://ruleset.skk.moe/List/non_ip/domestic.conf,DIRECT,extended-matching
#>> 常见直连规则列表 
# 需要走直连的进程和域名，包含大部分 BT 和 BT Based 下载器的进程名、PT 站的域名、AdGuard 程序往网页中注入去广告增强脚本的域名（如 local.adguard.org 和 injections.adguard.org）等。
# 本条配置阅读说明后自行选择是否启用
#RULE-SET,https://ruleset.skk.moe/List/non_ip/direct.conf,DIRECT,extended-matching

#> 内网域名
# 包含 .local 和局域网 IP 的 in-addr.arpa 域名（即 AS112 域名）。这部分域名一般会被解析到局域网 IP、需要走内网 DNS 解析、需要直连访问。
RULE-SET,https://ruleset.skk.moe/List/non_ip/lan.conf,DIRECT

### ip ###
#> 广告拦截 / 隐私保护 / 病毒拦截 / 钓鱼和诈骗域名拦截
RULE-SET,https://ruleset.skk.moe/List/ip/reject.conf,REJECT-DROP

#> 流媒体 IP
# 按照流媒体限定区域区分的常见流媒体服务 IP 列表。你可以根据自己的需求选择性引用 stream_[xx].conf 规则、并使用 stream.conf 为剩下所有流媒体 IP 做兜底。
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_hk.conf,[替换你的策略名]
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_jp.conf,[替换你的策略名]
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_us.conf,[替换你的策略名]
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_tw.conf,[替换你的策略名]
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_kr.conf,[替换你的策略名]
#RULE-SET,https://ruleset.skk.moe/List/ip/stream_eu.conf,[替换你的策略名]
RULE-SET,https://ruleset.skk.moe/List/ip/stream.conf,Streaming!CN

#> Telegram IP
RULE-SET,https://ruleset.skk.moe/List/ip/telegram.conf,Telegram
# PROCESS-NAME 本条适用于macOS
PROCESS-NAME,Telegram,REJECT-DROP

#>> 自定义 ip 规则
# Google
RULE-SET,https://raw.githubusercontent.com/limxfx/HelloWorld/refs/heads/main/Surge/Ruleset/ip/google.list,Google

#> 网易云 IP
#RULE-SET,https://ruleset.skk.moe/List/ip/neteasemusic.conf,[替换你的策略名]

#> 国内 IP 段
RULE-SET,https://ruleset.skk.moe/List/ip/domestic.conf,DIRECT
RULE-SET,https://ruleset.skk.moe/List/ip/china_ip.conf,DIRECT
# 仅当使用 IPv6 时才启用
#RULE-SET,https://ruleset.skk.moe/List/ip/china_ip_ipv6.conf,[替换你的策略名]

#> 内网域名
# 包含 .local 和局域网 IP 的 in-addr.arpa 域名（即 AS112 域名）。这部分域名一般会被解析到局域网 IP、需要走内网 DNS 解析、需要直连访问。
RULE-SET,https://ruleset.skk.moe/List/ip/lan.conf,DIRECT

#>> Local Area Network & GeoIP China
# 以下规则将触发本地 DNS 解析。有上面国内部分规则可以不启用，如果不放心可以自己开启
OR,((RULE-SET,SYSTEM), (RULE-SET,LAN), (GEOIP,CN)),DIRECT
# RULE-SET,SYSTEM,Proxy
# #>> 以下规则将触发本地 DNS 解析。有上面国内部分规则可以不启用，如果不放心可以自己开启
# RULE-SET,LAN,DIRECT
# GEOIP,CN,DIRECT

#> FINAL
# 不能被域名和 IP 规则匹配到的请求、或者 Surge 本机 DNS 解析失败的请求，都使用 FINAL 策略。
FINAL,Proxy,dns-failed

[MITM]